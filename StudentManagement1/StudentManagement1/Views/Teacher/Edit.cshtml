@model StudentManagement1.Teacher

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Teacher</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Teacher_Id)
        </div>
        <div class="editor-field">
            @Html.DisplayTextFor(model => model.Teacher_Id)
        </div>

        <br />
        <br />

        <div class="editor-field">
            @Html.HiddenFor(model => model.Teacher_Id)
        </div>

        <div class="editor-field">
            @Html.HiddenFor(model => model.Password)
        </div>

        <div class="editor-field">
            @Html.HiddenFor(model => model.Password_Salt)
        </div>
      
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <br />
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.Sur_Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sur_Name)
            @Html.ValidationMessageFor(model => model.Sur_Name)
        </div>

        <br />
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.Designation)
        </div>
        <div class="editor-field">
           
            @{
   List<SelectListItem> listItems= new List<SelectListItem>();
   listItems.Add(new SelectListItem
        {
            Text = "Lecturer",
            Value = "Lecturer"
        });
   listItems.Add(new SelectListItem
        {
            Text = "Assistance Professor",
            Value = "Assistance Professor",
            
        });
   listItems.Add(new SelectListItem
        {
            Text = "Associate Professor",
            Value = "Associate Professor"
        });
   listItems.Add(new SelectListItem
   {
       Text = "Professor",
       Value = "Professor"
   });
}

            @Html.DropDownListFor(model => model.Designation, listItems)
            @Html.ValidationMessageFor(model => model.Designation)
        </div>

        <br />
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.Dept_Id, "Department")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Dept_Id")
            @Html.ValidationMessageFor(model => model.Dept_Id)
        </div>

        <br />
        <br />

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}